#!/usr/bin/env bash

# Set with the flags "-e", "-u","-o pipefail" cause the script to fail
# if certain things happen, which is a good thing.  Otherwise, we can
# get hidden bugs that are hard to discover.

set -euo pipefail
_path="$(cd "$(dirname "${BASH_SOURCE[0]}")" && cd "$(dirname "$(readlink "${BASH_SOURCE[0]}" || echo ".")")" && pwd)"
[  -f "${_path}/src/_dm-helper.sh" ] && . "${_path}/src/_dm-helper.sh" || echo "No helper-script found"

# shellcheck disable=SC1090
. "$(get_config)"

main() {
    # Running ps to get running processes and display in dmenu.
    selected="$(ps --user "$(id -u)" -F | \
                ${DMENU} -i -l 20 -p "Search for process to kill:" "$@" | \
                awk '{print $2" "$11}')";

    # Nested 'if' statements.  The outer 'if' statement is what to do
    # when we select one of the 'selected' options listed in dmenu.
    if [ -n $selected ]; then
        # Piping No/Yes into dmenu as a safety measure, in case you
        # select a process that you don't actually want killed.
        answer="$(echo -e "No\nYes" | ${DMENU} -i -p "Kill $selected?" "$@")"

        if [ $answer = "Yes" ]; then
            selpid="$(awk '{print $1}' <<< "$selected")";
            kill -9 "$selpid"
        echo "Process $selected has been killed." && exit 0
        fi

        if [ $answer == "No" ]; then
        echo "Program terminated." && exit 0
        fi
    fi
}

[ "${BASH_SOURCE[0]}" = "${0}" ] && main "$@"
